{"version":3,"sources":["../src/index.jsx"],"names":["JiveSelector","props","value","isArray","length","undefined","state","items","id","multiple","contentType","newProps","setState","mainClasses","main","map","item","i","name","remove","e","callPicker","limit","buttonTitle","preventDefault","jive","corev3","search","requestPicker","excludeContent","excludePlaces","excludePeople","success","add","data","error","console","JSON","stringify","onItemSelect","filterFields","idField","itemExists","findIndex","targetItem","$push","onChange","resources","subject","contentID","placeID","uri","self","ref","html","formatted","$splice","output","default","propTypes","oneOfType","array","object","oneOf","bool","number","node","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by M. Yegorov on 2016-10-25.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport update from 'react-addons-update';\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\nimport osapi from 'jive/osapi';\r\n\r\nimport css from './JiveTilePlacePicker.css'\r\n\r\nexport default class JiveSelector extends Component {\r\n\r\n    static propTypes = {\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.array,\r\n            PropTypes.object\r\n        ]),\r\n\r\n        contentType: PropTypes.oneOf(['place', 'people', 'content']),\r\n\r\n        limit: PropTypes.oneOfType([\r\n            PropTypes.bool,\r\n            PropTypes.number\r\n        ]),\r\n\r\n        buttonTitle: PropTypes.node,\r\n\r\n        onItemSelect: PropTypes.oneOfType([\r\n            PropTypes.bool,\r\n            PropTypes.func\r\n        ]),\r\n\r\n        filterFields: PropTypes.oneOfType([\r\n            PropTypes.bool,\r\n            PropTypes.func\r\n        ]),\r\n\r\n        onChange: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        value:[],\r\n        contentType: 'place',\r\n        limit: false,\r\n        buttonTitle: 'Add item',\r\n        onItemSelect: false,\r\n        filterFields: false,\r\n        onChange: function(){}\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const {value} = props;\r\n        const isArray = props.value.length !== undefined\r\n\r\n        this.state = {\r\n            items: props.value ? (isArray ? value : (value.id > 0 ? [value] : [])) : [],\r\n            multiple: isArray,\r\n            contentType: props.contentType\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        if (this.props.value !== newProps.value){\r\n\r\n            const isArray = newProps.value.length !== undefined\r\n\r\n            this.setState({\r\n                items: isArray ? newProps.value : (newProps.value.id > 0 ? [newProps.value] : [])\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {items, multiple, contentType} = this.state;\r\n\r\n        const mainClasses = classnames(css.main, 'anrom-jive-osapi-picker', {\r\n            multiple\r\n        });\r\n\r\n        return <div className={mainClasses}>\r\n            <div className={`selected-items selected-${contentType}s`}>\r\n                {items.map((item, i) =>\r\n                    <div key={i}>\r\n                        <span className=\"selected\">\r\n                            <span className=\"name\">{item.name}</span>\r\n                            <a className=\"remove\" onClick={e => this.remove(e, i)}>&times;</a>\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {(multiple || !items.length) && <button onClick={::this.callPicker} disabled={this.props.limit && items.length >= this.props.limit}>\r\n                {this.props.buttonTitle}\r\n            </button>}\r\n        </div>\r\n    }\r\n\r\n    callPicker(e) {\r\n        e.preventDefault();\r\n\r\n        const {contentType} = this.state\r\n\r\n        osapi.jive.corev3.search.requestPicker({\r\n            excludeContent: contentType == 'people' || contentType == 'place',\r\n            excludePlaces: contentType == 'people' || contentType == 'content',\r\n            excludePeople: contentType == 'content' || contentType == 'place',\r\n            success: data => this.add(data),\r\n            error: data => {\r\n                console.error('error: ' + JSON.stringify(data));\r\n            }\r\n        });\r\n    }\r\n\r\n    add(item){\r\n        const {contentType, items} = this.state\r\n\r\n        if (this.props.onItemSelect){\r\n            this.props.onItemSelect(item)\r\n        }\r\n\r\n        const filterFields = this.props.filterFields || ::this.filterFields\r\n\r\n        const idField = {\r\n            \"place\": \"placeID\",\r\n            \"content\": \"contentID\",\r\n            \"people\": \"id\"\r\n        }\r\n\r\n        const itemExists = items.findIndex(targetItem => targetItem.id == item[idField[contentType]]) != -1;\r\n\r\n        if (!itemExists){\r\n            this.setState(update(this.state, {\r\n                items: {$push: [filterFields(item)]}\r\n            }), () => this.onChange())\r\n        }\r\n    }\r\n    \r\n    filterFields(item){\r\n        const {contentType} = this.state\r\n        const {resources, name, subject, contentID, placeID, id} = item;\r\n\r\n        switch (contentType){\r\n            case 'place':\r\n                return {\r\n                    name,\r\n                    id: placeID,\r\n                    uri: resources.self.ref,\r\n                    html: resources.html.ref\r\n                }\r\n            case 'content':\r\n                return {\r\n                    name: subject,\r\n                    id: contentID,\r\n                    uri: resources.self.ref,\r\n                    html: resources.html.ref\r\n                }\r\n            case 'people':\r\n                return {\r\n                    name: name.formatted,\r\n                    id,\r\n                    uri: resources.self.ref,\r\n                    html: resources.html.ref\r\n                }\r\n        }\r\n    }\r\n\r\n    remove(e, i) {\r\n        if (e !== undefined) e.preventDefault()\r\n\r\n        this.setState(update(this.state, {\r\n            items: {$splice: [[i,1]]}\r\n        }), () => this.onChange())\r\n    }\r\n\r\n    onChange(){\r\n        const {items, multiple} = this.state;\r\n\r\n        let output;\r\n\r\n        if (items.length){\r\n            output = multiple ? items : items[0]\r\n        } else {\r\n            output = multiple ? [] : this.props.default || false\r\n        }\r\n\r\n        this.props.onChange(output)\r\n    }\r\n}"]}