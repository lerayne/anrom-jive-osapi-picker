{"version":3,"sources":["../src/index.jsx"],"names":["JivePlaceSelector","props","value","isArray","Array","state","places","id","multiple","contentType","mainClasses","main","map","item","i","name","formatted","subject","remove","e","length","callPicker","buttonTitle","preventDefault","jive","corev3","search","requestPicker","excludeContent","excludePlaces","excludePeople","success","add","data","error","console","JSON","stringify","place","filterFields","itemExists","findIndex","targetPlace","placeID","contentID","setState","$push","onChange","resources","uri","self","ref","$splice","output","default"],"mappings":";;;;;;;;AAIA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;+eAVA;;;;IAYqBA,iB;;;AAEjB,+BAAYC,KAAZ,EAAkB;AAAA;;AAAA,0IACRA,KADQ;;AAAA,YAGPC,KAHO,GAGED,KAHF,CAGPC,KAHO;;AAId,YAAMC,UAAUF,MAAMC,KAAN,YAAuBE,KAAvC;;AAEA,cAAKC,KAAL,GAAa;AACTC,oBAAQL,MAAMC,KAAN,GAAeC,UAAUD,KAAV,GAAmBA,MAAMK,EAAN,GAAW,CAAX,GAAe,CAACL,KAAD,CAAf,GAAyB,EAA3D,GAAkE,EADjE;AAETM,sBAAUL,OAFD;AAGTM,yBAAaR,MAAMQ,WAAN,IAAqB;AAHzB,SAAb;AANc;AAWjB;;;;iCAEQ;AAAA;;AAAA,yBAEmC,KAAKJ,KAFxC;AAAA,gBAEEC,MAFF,UAEEA,MAFF;AAAA,gBAEUE,QAFV,UAEUA,QAFV;AAAA,gBAEoBC,WAFpB,UAEoBA,WAFpB;;;AAIL,gBAAMC,cAAc,0BAAW,8BAAIC,IAAf,EAAqB,yBAArB,EAAgD;AAChEH;AADgE,aAAhD,CAApB;;AAIA,mBAAO;AAAA;AAAA,kBAAK,WAAWE,WAAhB;AACH;AAAA;AAAA,sBAAK,WAAU,iBAAf;AACKJ,2BAAOM,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,+BACR;AAAA;AAAA,8BAAK,KAAKA,CAAV;AACI;AAAA;AAAA,kCAAM,WAAU,UAAhB;AACKL,+CAAe,OAAf,IAA0B;AAAA;AAAA,sCAAM,WAAU,MAAhB;AAAwBI,yCAAKE;AAA7B,iCAD/B;AAEKN,+CAAe,QAAf,IAA2B;AAAA;AAAA,sCAAM,WAAU,MAAhB;AAAwBI,yCAAKE,IAAL,CAAUC;AAAlC,iCAFhC;AAGKP,+CAAe,SAAf,IAA4B;AAAA;AAAA,sCAAM,WAAU,MAAhB;AAAwBI,yCAAKI;AAA7B,iCAHjC;AAII;AAAA;AAAA,sCAAG,WAAU,QAAb,EAAsB,SAAS;AAAA,mDAAK,OAAKC,MAAL,CAAYC,CAAZ,EAAeL,CAAf,CAAL;AAAA,yCAA/B;AAAA;AAAA;AAJJ;AADJ,yBADQ;AAAA,qBAAX;AADL,iBADG;AAcF,iBAACN,YAAY,CAACF,OAAOc,MAArB,KAAgC;AAAA;AAAA,sBAAQ,SAAW,KAAKC,UAAhB,MAAW,IAAX,CAAR;AAC5B,yBAAKpB,KAAL,CAAWqB,WAAX,IAA0B;AADE;AAd9B,aAAP;AAkBH;;;mCAEUH,C,EAAG;AAAA;;AACVA,cAAEI,cAAF;;AADU,gBAGHd,WAHG,GAGY,KAAKJ,KAHjB,CAGHI,WAHG;;;AAKV,4BAAMe,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBC,aAAzB,CAAuC;AACnCC,gCAAgBnB,eAAe,QAAf,IAA2BA,eAAe,OADvB;AAEnCoB,+BAAepB,eAAe,QAAf,IAA2BA,eAAe,SAFtB;AAGnCqB,+BAAerB,eAAe,SAAf,IAA4BA,eAAe,OAHvB;AAInCsB,yBAAS;AAAA,2BAAQ,OAAKC,GAAL,CAASC,IAAT,CAAR;AAAA,iBAJ0B;AAKnCC,uBAAO,qBAAQ;AACXC,4BAAQD,KAAR,CAAc,YAAYE,KAAKC,SAAL,CAAeJ,IAAf,CAA1B;AACH;AAPkC,aAAvC;AASH;;;4BAEGK,K,EAAM;AAAA;;AAAA,gBACC7B,WADD,GACgB,KAAKJ,KADrB,CACCI,WADD;;;AAGN,gBAAM8B,eAAe,KAAKtC,KAAL,CAAWsC,YAAX,IAA6B,KAAKA,YAAlC,MAA6B,IAA7B,CAArB;;AAEA,gBAAIC,aAAa,IAAjB;AACA,gBAAI/B,eAAe,OAAnB,EAA2B;AACvB+B,6BAAa,KAAKnC,KAAL,CAAWC,MAAX,CAAkBmC,SAAlB,CAA4B;AAAA,2BAAeC,YAAYnC,EAAZ,IAAkB+B,MAAMK,OAAvC;AAAA,iBAA5B,KAA+E,CAAC,CAA7F;AACH;AACD,gBAAIlC,eAAe,SAAnB,EAA6B;AACzB+B,6BAAa,KAAKnC,KAAL,CAAWC,MAAX,CAAkBmC,SAAlB,CAA4B;AAAA,2BAAeC,YAAYnC,EAAZ,IAAkB+B,MAAMM,SAAvC;AAAA,iBAA5B,KAAiF,CAAC,CAA/F;AACH;AACD,gBAAInC,eAAe,QAAnB,EAA4B;AACxB+B,6BAAa,KAAKnC,KAAL,CAAWC,MAAX,CAAkBmC,SAAlB,CAA4B;AAAA,2BAAeC,YAAYnC,EAAZ,IAAkB+B,MAAM/B,EAAvC;AAAA,iBAA5B,KAA0E,CAAC,CAAxF;AACH;;AAED,gBAAI,CAACiC,UAAL,EAAgB;AACZ,qBAAKK,QAAL,CAAc,iCAAO,KAAKxC,KAAZ,EAAmB;AAC7BC,4BAAQ,EAACwC,OAAO,CAACP,aAAaD,KAAb,CAAD,CAAR;AADqB,iBAAnB,CAAd,EAEI;AAAA,2BAAM,OAAKS,QAAL,EAAN;AAAA,iBAFJ;AAGH;AACJ;;;qCAEYlC,I,EAAK;AAAA,gBACPJ,WADO,GACQ,KAAKJ,KADb,CACPI,WADO;AAAA,gBAEPuC,SAFO,GAE6CnC,IAF7C,CAEPmC,SAFO;AAAA,gBAEIjC,IAFJ,GAE6CF,IAF7C,CAEIE,IAFJ;AAAA,gBAEUE,OAFV,GAE6CJ,IAF7C,CAEUI,OAFV;AAAA,gBAEmB2B,SAFnB,GAE6C/B,IAF7C,CAEmB+B,SAFnB;AAAA,gBAE8BD,OAF9B,GAE6C9B,IAF7C,CAE8B8B,OAF9B;AAAA,gBAEuCpC,EAFvC,GAE6CM,IAF7C,CAEuCN,EAFvC;;;AAId,oBAAQE,WAAR;AACI,qBAAK,OAAL;AACI,2BAAO;AACHM,kCADG;AAEHR,4BAAIoC,OAFD;AAGHM,6BAAKD,UAAUE,IAAV,CAAeC;AAHjB,qBAAP;AAKJ,qBAAK,SAAL;AACI,2BAAO;AACHpC,8BAAME,OADH;AAEHV,4BAAIqC,SAFD;AAGHK,6BAAKD,UAAUE,IAAV,CAAeC;AAHjB,qBAAP;AAKJ,qBAAK,QAAL;AACI,2BAAO;AACHpC,8BAAMA,IADH;AAEHR,8BAFG;AAGH0C,6BAAKD,UAAUE,IAAV,CAAeC;AAHjB,qBAAP;AAdR;AAoBH;;;+BAEMhC,C,EAAGL,C,EAAG;AAAA;;AACTK,cAAEI,cAAF;;AAEA,iBAAKsB,QAAL,CAAc,iCAAO,KAAKxC,KAAZ,EAAmB;AAC7BC,wBAAQ,EAAC8C,SAAS,CAAC,CAACtC,CAAD,EAAG,CAAH,CAAD,CAAV;AADqB,aAAnB,CAAd,EAEI;AAAA,uBAAM,OAAKiC,QAAL,EAAN;AAAA,aAFJ;AAGH;;;mCAES;AACN,gBAAI,OAAO,KAAK9C,KAAL,CAAW8C,QAAlB,IAA8B,UAAlC,EAA6C;AAAA,8BAEd,KAAK1C,KAFS;AAAA,oBAElCC,MAFkC,WAElCA,MAFkC;AAAA,oBAE1BE,QAF0B,WAE1BA,QAF0B;;;AAIzC,oBAAI6C,eAAJ;;AAEA,oBAAI/C,OAAOc,MAAX,EAAkB;AACdiC,6BAAS7C,WAAWF,MAAX,GAAoBA,OAAO,CAAP,CAA7B;AACH,iBAFD,MAEO;AACH+C,6BAAS7C,WAAW,EAAX,GAAgB,KAAKP,KAAL,CAAWqD,OAAX,IAAsB,KAA/C;AACH;;AAED,qBAAKrD,KAAL,CAAW8C,QAAX,CAAoBM,MAApB;AACH;AACJ;;;;;;kBAnIgBrD,iB","file":"index.js","sourcesContent":["/**\r\n * Created by M. Yegorov on 2016-10-25.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport update from 'react-addons-update';\r\nimport classnames from 'classnames';\r\n\r\nimport osapi from 'jive/osapi';\r\n\r\nimport css from './JiveTilePlacePicker.css'\r\n\r\nexport default class JivePlaceSelector extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const {value} = props;\r\n        const isArray = props.value instanceof Array;\r\n\r\n        this.state = {\r\n            places: props.value ? (isArray ? value : (value.id > 0 ? [value] : [])) : [],\r\n            multiple: isArray,\r\n            contentType: props.contentType || 'place'\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {places, multiple, contentType} = this.state;\r\n\r\n        const mainClasses = classnames(css.main, 'anrom-jive-osapi-picker', {\r\n            multiple\r\n        });\r\n\r\n        return <div className={mainClasses}>\r\n            <div className=\"selected-places\">\r\n                {places.map((item, i) =>\r\n                    <div key={i}>\r\n                        <span className=\"selected\">\r\n                            {contentType == 'place' && <span className=\"name\">{item.name}</span>}\r\n                            {contentType == 'people' && <span className=\"name\">{item.name.formatted}</span>}\r\n                            {contentType == 'content' && <span className=\"name\">{item.subject}</span>}\r\n                            <a className=\"remove\" onClick={e => this.remove(e, i)}>&times;</a>\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {(multiple || !places.length) && <button onClick={::this.callPicker}>\r\n                {this.props.buttonTitle || 'Add place'}\r\n            </button>}\r\n        </div>\r\n    }\r\n\r\n    callPicker(e) {\r\n        e.preventDefault();\r\n\r\n        const {contentType} = this.state\r\n\r\n        osapi.jive.corev3.search.requestPicker({\r\n            excludeContent: contentType == 'people' || contentType == 'place',\r\n            excludePlaces: contentType == 'people' || contentType == 'content',\r\n            excludePeople: contentType == 'content' || contentType == 'place',\r\n            success: data => this.add(data),\r\n            error: data => {\r\n                console.error('error: ' + JSON.stringify(data));\r\n            }\r\n        });\r\n    }\r\n\r\n    add(place){\r\n        const {contentType} = this.state\r\n\r\n        const filterFields = this.props.filterFields || ::this.filterFields;\r\n\r\n        let itemExists = true\r\n        if (contentType == 'place'){\r\n            itemExists = this.state.places.findIndex(targetPlace => targetPlace.id == place.placeID) != -1;\r\n        }\r\n        if (contentType == 'content'){\r\n            itemExists = this.state.places.findIndex(targetPlace => targetPlace.id == place.contentID) != -1;\r\n        }\r\n        if (contentType == 'people'){\r\n            itemExists = this.state.places.findIndex(targetPlace => targetPlace.id == place.id) != -1;\r\n        }\r\n\r\n        if (!itemExists){\r\n            this.setState(update(this.state, {\r\n                places: {$push: [filterFields(place)]}\r\n            }), () => this.onChange())\r\n        }\r\n    }\r\n    \r\n    filterFields(item){\r\n        const {contentType} = this.state\r\n        const {resources, name, subject, contentID, placeID, id} = item;\r\n\r\n        switch (contentType){\r\n            case 'place':\r\n                return {\r\n                    name,\r\n                    id: placeID,\r\n                    uri: resources.self.ref\r\n                }\r\n            case 'content':\r\n                return {\r\n                    name: subject,\r\n                    id: contentID,\r\n                    uri: resources.self.ref\r\n                }\r\n            case 'people':\r\n                return {\r\n                    name: name,\r\n                    id,\r\n                    uri: resources.self.ref\r\n                }\r\n        }\r\n    }\r\n\r\n    remove(e, i) {\r\n        e.preventDefault();\r\n\r\n        this.setState(update(this.state, {\r\n            places: {$splice: [[i,1]]}\r\n        }), () => this.onChange())\r\n    }\r\n\r\n    onChange(){\r\n        if (typeof this.props.onChange == 'function'){\r\n\r\n            const {places, multiple} = this.state;\r\n\r\n            let output;\r\n\r\n            if (places.length){\r\n                output = multiple ? places : places[0]\r\n            } else {\r\n                output = multiple ? [] : this.props.default || false\r\n            }\r\n\r\n            this.props.onChange(output)\r\n        }\r\n    }\r\n}"]}